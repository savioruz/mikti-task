basePath: /api/v1
definitions:
  models.BookCreateRequest:
    properties:
      author:
        type: string
      book_status:
        type: integer
      description:
        type: string
      picture:
        type: string
      rating:
        maximum: 5
        minimum: 1
        type: integer
      title:
        type: string
      year:
        maximum: 2200
        minimum: 100
        type: integer
    required:
    - author
    - book_status
    - title
    - year
    type: object
  models.BookResponse:
    properties:
      author:
        type: string
      book_status:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      picture:
        type: string
      rating:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  models.BookUpdateRequest:
    properties:
      author:
        type: string
      book_status:
        type: integer
      description:
        type: string
      picture:
        type: string
      rating:
        maximum: 5
        minimum: 1
        type: integer
      title:
        type: string
      year:
        maximum: 2200
        minimum: 100
        type: integer
    required:
    - year
    type: object
info:
  contact:
    email: jakueenak@gmail.com
    name: API Support
  description: This is a simple bookstore API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Bookstore API
  version: "1.0"
paths:
  /book:
    post:
      consumes:
      - application/json
      description: Create a new book
      parameters:
      - description: Book Create Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BookCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              data:
                $ref: '#/definitions/models.BookResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "409":
          description: Conflict
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Create a new book
      tags:
      - book
  /book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Delete a book by ID
      tags:
      - book
    get:
      consumes:
      - application/json
      description: Get a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/models.BookResponse'
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Get a book by ID
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Book Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BookUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookResponse'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Update a book by ID
      tags:
      - book
  /books:
    get:
      consumes:
      - application/json
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/models.BookResponse'
                type: array
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Get all books
      tags:
      - book
schemes:
- http
swagger: "2.0"
